# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4
# $Id: Portfile 140520 2015-09-21 15:35:58Z michaelld@macports.org $

PortSystem          1.0
PortGroup           python 1.0

set my_name         petl
set _n              [string index ${my_name} 0]
name                py-${my_name}
version             1.3.0
revision            0
categories-append   textproc
license             MIT
maintainers         nstanger-local
description         python module for extracting, transforming, and loading tables of data
long_description \
    petl is a general purpose Python package \
    for extracting, transforming and loading \
    tables of data.

platforms           darwin
supported_archs     noarch

homepage            https://github.com/alimanfoo/${my_name}
master_sites        pypi:${_n}/${my_name}/
distname            ${my_name}-${version}

checksums          sha256  943a6e3211616d25ebc4dcd900ca4f96f53ccd9dbb612271a23a7efdaf3f8c00

python.versions     27 34 35 36 37

python.link_binaries    yes

if {${version} < 34} {
    depends_build-append port:py-setuptools_scm
} else {
    depends_build-append port:py${python.version}-setuptools_scm
}

variant excel description {support for Microsoft Excel spreadsheets} {
    if {${version} < 34} {
        depends_run-append port:py-xlrd
        depends_run-append port:py-xlwt
        depends_run-append port:py-openpyxl
    } else {
        depends_run-append port:py${python.version}-xlrd
        depends_run-append port:py${python.version}-xlwt
        depends_run-append port:py${python.version}-openpyxl
    }
}
variant hdf5 description {support for HDF5 files} {
    if {${version} < 34} {
        depends_run-append port:py-tables
    } else {
        depends_run-append port:py${python.version}-tables
    }
}
variant numpy description {support for numpy arrays} {
    if {${version} < 34} {
        depends_run-append port:py-numpy
    } else {
        depends_run-append port:py${python.version}-numpy
    }
}
variant pandas description {support for pandas DataFrames} {
    if {${version} < 34} {
        depends_run-append port:py-pandas
    } else {
        depends_run-append port:py${python.version}-pandas
    }
}
variant postgresql description {support for PostgreSQL databases} {
    if {${version} < 34} {
        depends_run-append port:py-psycopg2
        depends_run-append port:py-sqlalchemy
    } else {
        depends_run-append port:py${python.version}-psycopg2
        depends_run-append port:py${python.version}-sqlalchemy
    }
}
variant whoosh description {support for Whoosh text indexes} {
    if {${version} < 34} {
        depends_run-append port:py-whoosh
    } else {
        depends_run-append port:py${python.version}-whoosh
    }
}
variant xpath description {support for XPath expressions on XML files} {
    if {${version} < 34} {
        depends_run-append port:py-lxml
    } else {
        depends_run-append port:py${python.version}-lxml
    }
}

# possible additional variants, require new portfiles
# N intervaltree==2.0.4
# N PyMySQL==0.6.6

if {${name} ne ${subport}} {
#     test.run  yes
#     test.cmd  ${python.bin} setup.py test
# from docs: nosetests -v petl

    livecheck.type  none

} else {
    livecheck.type  regex
    livecheck.url   https://pypi.python.org/pypi/${my_name}/json
    livecheck.regex "${my_name}-(\\d+(?:\\.\\d+)*)${extract.suffix}"
}

