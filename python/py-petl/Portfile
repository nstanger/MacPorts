# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4
# $Id: Portfile 140520 2015-09-21 15:35:58Z michaelld@macports.org $

PortSystem          1.0
PortGroup           python 1.0

set my_name         petl
name                py-${my_name}
version             1.1.0
revision            2
categories-append   textproc
license             MIT
maintainers         nstanger-local
description         python module for extracting, transforming, and loading tables of data
long_description \
    petl is a general purpose Python package \
    for extracting, transforming and loading \
    tables of data.

platforms           darwin
supported_archs     noarch

homepage            https://github.com/alimanfoo/${my_name}
master_sites        pypi:p/${my_name}/
distname            ${my_name}-${version}

checksums           md5     9d53a5915c99931eeca556cd28dcf05f \
                    rmd160  f6e2feccd870a19ff71b2a97665b9d452b0265bf \
                    sha256  06e7b8bcab62dcdcf862715d3ddf0a705a603a60d003d556a510bfa9ea3782a0

python.versions     26 27 34

python.link_binaries    yes

variant excel description {support for Microsoft Excel spreadsheets} {
    depends_run-append port:py-xlrd
    depends_run-append port:py-xlwt
    depends_run-append port:py-openpyxl
}
variant hdf5 description {support for HDF5 files} {
    depends_run-append port:py-tables
}
variant numpy description {support for numpy arrays} {
    depends_run-append port:py-numpy
}
variant pandas description {support for pandas DataFrames} {
    depends_run-append port:py-pandas
}
variant postgresql description {support for PostgreSQL databases} {
    depends_run-append port:py-psycopg2
    depends_run-append port:py-sqlalchemy
}
variant whoosh description {support for Whoosh text indexes} {
    depends_run-append port:py-whoosh
}
variant xpath description {support for XPath expressions on XML files} {
    depends_run-append port:py-lxml
}

# possible additional variants, require new portfiles
# N intervaltree==2.0.4
# N PyMySQL==0.6.6

if {${name} ne ${subport}} {
#     test.run  yes
#     test.cmd  ${python.bin} setup.py test
# from docs: nosetests -v petl

    livecheck.type  none

} else {
    livecheck.type  regex
    livecheck.url   https://pypi.python.org/pypi/${my_name}/json
    livecheck.regex "${my_name}-(\\d+(?:\\.\\d+)*)${extract.suffix}"
}

